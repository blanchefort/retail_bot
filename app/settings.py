"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'rw1n8#qswa)&=p#$j8y!ki!#7v5ln#d08d7-^=b8(y9e5xxt92'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'bootstrap4',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'webpanel.apps.WebpanelConfig',
    'telegram_bot.apps.TelegramBotConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

LOGIN_REDIRECT_URL  = '/profile/'
LOGIN_URL   = '/accounts/login/'
LOGOUT_REDIRECT_URL = 'index'

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'

# Database
if BASE_DIR == '/home/igor/scripts/retail_bot/app':
    # local
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }
else:
    # server
    DATABASES = {
        'default': {
            # # django.db.backends.postgresql
            # 'ENGINE': 'django.db.backends.postgresql_psycopg2',
            # # '/cloudsql/PROJECT-ID:COMPUTE-ENGINE-ZONE:DATABASE-NAME'
            # 'HOST': '10.33.80.3',
            # 'PORT': '5432',
            # 'NAME': 'retail_test',
            # 'USER': 'postgres',
            # 'PASSWORD': 'supply2020'
            # django.db.backends.postgresql
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            # '/cloudsql/PROJECT-ID:COMPUTE-ENGINE-ZONE:DATABASE-NAME'
            'HOST': 'localhost',
            'PORT': '5432',
            'NAME': 'retailbot',
            'USER': 'retailbot',
            'PASSWORD': ''
        }
    }


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'ru-RU'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# "Поисковики" статики. Первый ищет статику в STATICFILES_DIRS,
# второй в папках приложений.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

# Медиа: загружаемые файлы
MEDIA_URL = '/media/'
MEDIA_DIR = 'media'
MEDIA_ROOT = os.path.join(BASE_DIR, MEDIA_DIR)
# Прайс-листы
MEDIA_PRICELISTS_DIR = 'pricelists'
# Счета, присланные продавцами покупателям
MEDIA_SELLERS_BILLS_DIR = 'sellers_bills'

# Формат даты
SHORT_DATE_FORMAT = 'j.m.Y'
SHORT_DATETIME_FORMAT = 'j.m.Y H:i'
DATE_FORMAT = 'j E Y'
DATETIME_FORMAT = 'j E Y H:i'
TIME_FORMAT = 'H:i'
FIRST_DAY_OF_WEEK = 1

# Telegram Settings
TELEGRAM_URL = 'https://api.telegram.org/bot'
TELEGRAM_TOKEN = '904927923:AAHzHA4ae-kvJcTVum_PGWhnRE1rABadKVY'
TELEGRAM_PROXY_URL = 'http://telegg.ru/orig/bot'

TELEGRAM_SCHEDULE_TIME = 60

# Путь до модели, определяющей категории товаров
CATEGORY_CLASSIFIER_URL = 'http://35.225.239.24:8884/predict'
CATEGORY_CLASSIFIER_API_KEY = '9673e7ba-2499-4460-9371-fd65f513a066'